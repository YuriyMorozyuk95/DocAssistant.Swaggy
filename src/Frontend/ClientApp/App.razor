@using Microsoft.FluentUI.AspNetCore.Components
@inject NavigationManager Navigation

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <Authorizing>
                    <FluentProgressRing Visible="true"></FluentProgressRing>
                </Authorizing>
                <NotAuthorized>
                    <FluentCard>  
                        <FluentHeader size="5">Sorry</FluentHeader>
                        <p>You're not authorized to reach this page. You need to <FluentAnchor href="/authentication/login-callback">log in.</FluentAnchor></p>  
  
                        @if(context.User.Identity?.IsAuthenticated != true)  
                        {  
                            Navigation.NavigateTo("authentication/login");  
                        }  
                        else  
                        {  
                            <p>You're not logged in.</p>  
                        }  
                    </FluentCard> 
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <FluentCard>  
                <FluentHeader size="5">Not found</FluentHeader>
                <LayoutView Layout="@typeof(MainLayout)">  
                    <p class="ms-fontSize-16 ms-fontWeight-regular">Sorry, there's nothing at this address.</p>
                </LayoutView>  
            </FluentCard>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

