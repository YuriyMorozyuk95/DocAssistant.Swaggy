@using Icons = Microsoft.FluentUI.AspNetCore.Components.Icons

@page "/chat"
@* @attribute [Authorize] *@

<!-- This page is intended for conversational Q&A. -->
<PageTitle>Chat</PageTitle>

<MudGrid Justify="Justify.Center">
    <MudItem id="answers" xs="12" Class="overflow-x-auto">
        @if (_questionAndAnswerMap is { Count: 0 })
        {
        }
        else
        {
            <MudStack Reverse="@IsReversed" Spacing="12">
                @foreach (var ((question, askedOn), answer) in _questionAndAnswerMap)
                {
                    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Start" Spacing="4">
                        <MudBadge Origin="Origin.TopLeft"
                                  Overlap="true"
                                  Color="Color.Info"
                                  Icon="@(new Icons.Regular.Size20.ChatBubblesQuestion().Content)" Class="d-flex align-self-end">
                            <MudPaper Class="pa-6 d-flex flex-column" Elevation="3">
                                <MudText Typo="Typo.body1" Align="Align.End">
                                    @question
                                </MudText>
                                <MudText Typo="Typo.caption" Align="Align.End" Color="Color.Info">
                                    @($"Asked at {askedOn:h:mm:ss tt} on {askedOn:M/dd/yy}")
                                </MudText>
                            </MudPaper>
                        </MudBadge>
                        <div class="ten-twelves">
                            @if (answer is null)
                            {
                                <MudBadge Origin="Origin.TopLeft" Overlap="true" Color="Color.Info"
                                          Icon="@(new Icons.Regular.Size20.LightbulbCheckmark().Content)" 
                                          Class="full-width">
                                    <MudPaper Class="pa-6" Elevation="3">
                                        <Loading />
                                    </MudPaper>
                                </MudBadge>
                            }
                            else
                            {
                                <MudBadge 
                                        Origin="Origin.BottomLeft"
                                        Dot=false 
                                        Bordered=false
                                          Style="width:100%;height:100%; cursor:pointer;"
                                          Overlap="true"
                                          Color="Color.Info"
                                          @onclick="@(async e => await @OnVoiceClicked(answer))"
                                          Icon="@(new Icons.Regular.Size24.PersonVoice().Content)">
                                    <MudBadge Origin="Origin.TopLeft"
                                              Overlap="true"
                                              Color="Color.Info"
                                              Icon="@(new Icons.Regular.Size24.BrainCircuit().Content)">
                                        <Answer Retort="@answer" FollowupQuestionClicked="@OnAskQuestionAsync" />
                                    </MudBadge>
                                </MudBadge>
                            }
                        </div>
                    </MudStack>
                }
            </MudStack>
        }
    </MudItem>
    <MudItem xs="12" Class="rounded">
        <MudGrid>
            <MudItem xs="12" lg="10">
                <VoiceTextInput @bind-Value="_userQuestion" Label="Prompt"
                                Icon="@(new Icons.Regular.Size24.ChatBubblesQuestion().Content)"
                                Placeholder="Enter your prompt to AI prompt"
                                HelperText="Use Shift + Enter for new lines."
                                Disabled=@_isReceivingResponse
                                OnEnterKeyPressed="OnAskClickedAsync" />
            </MudItem>
            <MudItem xs="0" lg="2" Class="d-flex align-self-center">
                <MudGrid Justify="Justify.Center">
                    <MudItem xs="9" Class="pa-2">
                        <MudFab Color="Color.Info" Size="Size.Large"
                                StartIcon=@(new Icons.Regular.Size24.Send().Content)
                                Class="full-width"
                                Label="Chat"
                                aria-label="Ask question button."
                                OnClick="@OnAskClickedAsync"
                                Disabled=@(_isReceivingResponse || string.IsNullOrWhiteSpace(_userQuestion)) />
                    </MudItem>
                    <MudItem xs="3" Class="pa-2">
                        <MudTooltip Arrow="true" Text="Clear chat history" Placement="Placement.Top">
                            <MudFab Color="Color.Info" Size="Size.Medium"
                                    StartIcon=@(new Icons.Regular.Size24.Delete().Content)
                                    aria-label="Clear chat."
                                    OnClick="@OnClearChat" Disabled=@(_isReceivingResponse || _questionAndAnswerMap is { Count: 0 }) />
                        </MudTooltip>
                    </MudItem>
                </MudGrid>
            </MudItem>
        </MudGrid>
    </MudItem>
    <MudScrollToTop Selector="#answers"
                    VisibleCssClass="visible absolute"
                    HiddenCssClass="invisible">
        <MudFab Color="Color.Info" IconSize="Size.Large" StartIcon="@(new Icons.Regular.Size20.ArrowCircleUp().Content)" />
    </MudScrollToTop>

</MudGrid>
